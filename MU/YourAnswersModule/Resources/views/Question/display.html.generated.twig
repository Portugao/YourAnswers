{# purpose of this template: questions display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'MUYourAnswersModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ question|muyouranswersmodule_formattedTitle|default(__('Question')) }}{% endblock %}
{% block title %}
    {% set templateTitle = question|muyouranswersmodule_formattedTitle|default(__('Question')) %}
    {{ templateTitle|notifyFilters('muyouranswersmodule.filter_hooks.questions.filter')|safeHtml }}{% if routeArea == 'admin' %} <small>({{ question.workflowState|muyouranswersmodule_objectState(false)|lower }})</small>{% endif %}
    {% set itemActions = knp_menu_get('mUYourAnswersMenuItemActions', [], {entity: question, area: routeArea, context: 'display'}) %}
    <div class="dropdown">
        <a id="itemActions{{ question.getKey() }}DropDownToggleStart" role="button" data-toggle="dropdown" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:bootstrap_fontawesome.html.twig'}) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="muyouranswersmodule-question muyouranswersmodule-display">

    <div class="row">
        <div class="col-sm-9">
    <dl>
        {% if question.workflowState is not empty and routeArea == 'admin' %}
            <dt>{{ __('State') }}</dt>
            <dd>{{ question.workflowState|muyouranswersmodule_listEntry('question', 'workflowState') }}</dd>
        {% endif %}
        {% if question.subject is not empty %}
            <dt>{{ __('Subject') }}</dt>
            <dd>{{ question.subject }}</dd>
        {% endif %}
        {% if question.textOfQuestion is not empty %}
            <dt>{{ __('Text of question') }}</dt>
            <dd>{{ question.textOfQuestion|safeHtml }}</dd>
        {% endif %}
        {% if question.startDate is not empty %}
            <dt>{{ __('Start date') }}</dt>
            <dd>{% if question.startDate is not empty %}
                {{ question.startDate|localizeddate('medium', 'short') }}
            {% endif %}</dd>
        {% endif %}
        {% if question.endDate is not empty %}
            <dt>{{ __('End date') }}</dt>
            <dd>{% if question.endDate is not empty %}
                {{ question.endDate|localizeddate('medium', 'short') }}
            {% endif %}</dd>
        {% endif %}
        
    </dl>

    {{ include('@MUYourAnswersModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: question}) }}

    {{ block('display_hooks') }}
        </div>
        <div class="col-sm-3">
            {{ block('related_items') }}
        </div>
    </div>
</div>
{% endblock %}
{% block related_items %}
    {% if routeArea == 'admin' %}
        <h4>{{ __('Answers') }}</h4>
    {% else %}
        <h3>{{ __('Answers') }}</h3>
    {% endif %}
    
    {% if question.answers|default %}
        {{ include(
            '@MUYourAnswersModule/Answer/includeDisplayItemListMany.html.twig',
            {items: question.answers}
        ) }}
    {% endif %}
    
    {% set mayManage = permissionHelper.hasComponentPermission('answer', constant('ACCESS_COMMENT')) %}
    {% if mayManage %}
        <p class="managelink">
            {% set createTitle = __('Create answer') %}
            <a href="{{ path('muyouranswersmodule_answer_' ~ routeArea ~ 'edit', {question: question.getKey()}) }}" title="{{ createTitle|e('html_attr') }}"><i class="fa fa-plus"></i> {{ createTitle }}</a>
        </p>
    {% endif %}
{% endblock %}
{% block display_hooks %}
    {% if question.supportsHookSubscribers() %}
        {% set hooks = notifyDisplayHooks(eventName='muyouranswersmodule.ui_hooks.questions.display_view', id=question.getKey(), urlObject=currentUrlObject, outputAsArray=true) %}
        {% if hooks is iterable and hooks|length > 0 %}
            {% for area, hook in hooks %}
                <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
            {% endfor %}
        {% endif %}
    {% endif %}
{% endblock %}
